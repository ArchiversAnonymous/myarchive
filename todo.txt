Genericize DB:
    Service
        - (PK) ID
        - Service Name
        - Service URL
    Users
        - (PK) ID
        - User ID
        - Username
        - Display Name
        - Creation Date
        - Files
        - FK (Service ID)
    Memories (Deviation, LJ/DW Post, Toot, Tweet, YoutubeVideo)
        - (PK) ID
        - Post ID
        - JSON
        - Title
        - Description
        - Creation Date
        - Files
        - etc...
        - (FK) Service ID
        - (FK) User ID
    Messages
        - (FK) Post ID


Fix Twitter, Youtube (playlists are tags)







General
    Pylint/PEP8
    Comment the damned code
    Integrate library dependencies. See link for how to handle licenses.
        Build script should copy from submodules.
        Python path setting script should also include submodules.
        https://softwareengineering.stackexchange.com/questions/234511/what-is-the-best-practice-for-arranging-third-party-library-licenses-paperwork/234526#234526
        Need to do numbers 3, 4, 6 specifically

    Get https://travis-ci.org/ build working.
    Export files to directories based on tags. Use original_filename, and either don't make, or symlink, duplicates.
    File renaming support? Should be sufficient to adjust original_filename.
    Secure credential storage.
    Add multithreaded support for background updates.
        http://stackoverflow.com/questions/6297404/multi-threaded-use-of-sqlalchemy
        http://stackoverflow.com/questions/9619789/sqlalchemy-proper-session-handling-in-multi-thread-applications
        http://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#threading-pooling-behavior
        http://docs.sqlalchemy.org/en/latest/orm/session_basics.html#when-do-i-make-a-sessionmaker
    Add attempted download of linked pages if possible.
    https://wiki.python.org/moin/SortingListsOfDictionaries
    https://www.python.org/dev/peps/pep-3148/
    Consider compressing DB with lzop. Saves a ton of space and it's very fast.
    Safely catch ctrl-c's. We don't want to miss tags, etc... we won't re-pull.



RSS Feeds
    Either use gpo, or import its functions.  https://github.com/gpodder/gpodder
    https://pypi.python.org/pypi/feedparser
    http://www.pythonforbeginners.com/feedparser/using-feedparser-in-python
    Podcasts
Medium
    https://medium.com/developers/welcome-to-the-medium-api-3418f956552#.9aey342sp
    https://github.com/Medium/medium-sdk-python
    https://medium.com/me/settings
Github Gist
    https://developer.github.com/v3/gists/
    https://github.com/jdowner/gist
SoFurry
Weasyl
Goodreads
LibraryThing
Reddit
Github Repository (Auto-pull updates?)
Internet archive API may be of help.
FurAffinity
Flickr
    https://github.com/sybrenstuvel/flickrapi
    https://stuvel.eu/flickrapi
    https://github.com/alexis-mignon/python-flickr-api
    https://github.com/alexis-mignon/python-flickr-api/wiki/Tutorial




Second Tier Priorities

 - Deviantart
   - Handle rate limits (https://www.deviantart.com/developers/errors#rates)
   - PDFs deviations not returned by API?
 - Twitter
   - Use sw_media_path.
   - Import as a background process once GUI works since the API takes a while.
   - Zip imports with timestamp, and including origin csv if it exists.
 - Youtube
   - TONS more stuff
   - https://github.com/youtube/api-samples/tree/master/python
   - https://github.com/mps-youtube/pafy
   - https://developers.google.com/api-client-library/python/
 - Dreamwidth / LJ
   - Add try/except to download of comments.
 - Mastodon
   - Post support.
