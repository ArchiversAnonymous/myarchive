https://travis-ci.org/

General
    Export files to directories based on tags. Use original_filename, and either don't make, or symlink, duplicates.
    File renaming support? Should be sufficient to adjust original_filename.
    Secure credential storage.
    Add multithreaded support for background updates.
        http://stackoverflow.com/questions/6297404/multi-threaded-use-of-sqlalchemy
        http://stackoverflow.com/questions/9619789/sqlalchemy-proper-session-handling-in-multi-thread-applications
        http://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#threading-pooling-behavior
        http://docs.sqlalchemy.org/en/latest/orm/session_basics.html#when-do-i-make-a-sessionmaker
    Add attempted download of linked pages if possible.
    Comment the damned code
    Pylint/PEP8
    https://wiki.python.org/moin/SortingListsOfDictionaries
    https://www.python.org/dev/peps/pep-3148/
    Consider compressing DB with lzop. Saves a ton of space and it's very fast.
    Metadata recovery (scan files for non tracked files, and add them to TrackedFiles. Tag as recovered_files until we fill in data for them.)

Dreamwidth / LJ
    Add download of posts.
    Add download of comments.
RSS Feeds
    Either use gpo, or import its functions.  https://github.com/gpodder/gpodder
    https://pypi.python.org/pypi/feedparser
    http://www.pythonforbeginners.com/feedparser/using-feedparser-in-python
    Podcasts
Medium
    https://medium.com/developers/welcome-to-the-medium-api-3418f956552#.9aey342sp
    https://github.com/Medium/medium-sdk-python
    https://medium.com/me/settings
Github Gist
    https://developer.github.com/v3/gists/
SoFurry
Weasyl
Goodreads
LibraryThing
Mastodon
  - https://pypi.python.org/pypi/Mastodon.py/1.0.8
  - https://github.com/halcy/Mastodon.py
Reddit
  - https://praw.readthedocs.io/en/latest/
Github Repository (Auto-pull updates?)
Internet archive API may be of help.





Deviantart
 - Handle rate limits (https://www.deviantart.com/developers/errors#rates)
 - PDFs deviations not returned by API?
Twitter
 - Use sw_media_path.
 - Import as a background process once GUI works since the API takes a while.
 - Zip imports with timestamp, and including origin csv if it exists.
Youtube
 - TONS more stuff
 - https://github.com/youtube/api-samples/tree/master/python
 - https://github.com/mps-youtube/pafy
 - https://developers.google.com/api-client-library/python/
